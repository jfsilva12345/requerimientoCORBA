module sop_corba{
    
    struct PersonalDTO{
        string tipo_id;
        long id;
        string nombreCompleto;
        string ocupacion;
        string usuario;
        string clave;
    };

    struct CredencialDTO{
        string usuario;
        string clave;
    };

    struct UsuarioDTO{
        string nombreCompleto;
        long id;
        string dependencia;
        string tipoUsuario;
        string fechaIngreso;
        string patologia;
        string usuario;
        string clave;
        boolean valorado;
    };

    struct AsistenciaDTO{
        long id;
        string fechaAsistencia;
        string observacion;
    };

    struct EjercicioDTO{
        string nombre;
        long repeticiones;
        double pese; 
    };

    struct ValoracionDTO{
        long id;
        string fechaValoracion;
        double frecuenciaCardiacaReposo;
        double frecuenciaCardiacaActiva;
        double estattura;
        double brazo;
        double pierna;
        double pecho;
        double cintura;
    };

    typedef sequence<EjercicioDTO> arrayEjercicioDTO;

    struct KeyValEjDTO{
        string key;
        arrayEjercicioDTO value;
    };
    typedef sequence<KeyValEjDTO> HashMapEjDTO;


    struct ProgramaSemanaDTO{
        long id;
        HashMapEjDTO plan;
    };

    struct KeyValPrSmDTO{
        string key;
        ProgramaSemanaDTO value;
    };
    typedef sequence<KeyValPrSmDTO> HashMapPrSmDTO;



    interface AdmCllbckInt{

        void notificar(in string nombreCompleto, in long id );

    };

    typedef sequence<UsuarioDTO> arrayUsuarioDTO;

    typedef sequence<AsistenciaDTO> arrayAsistenciaDTO;

    interface GestionUsuariosInt{

        boolean registrarUsuario(in UsuarioDTO objUsuario); 

        boolean consultarUsuario(in long id, out UsuarioDTO objUsuario) ;

        void registrarCallback(in AdmCllbckInt objCllbck) ;
    
        arrayUsuarioDTO listaUsuariosF();
    
        void registrarPlanFisico(in UsuarioDTO objUsuario, in HashMapPrSmDTO planFisicoCompleto);

        HashMapPrSmDTO consultarProgramaCompleto(in long id);

        void registrarValoracion(in UsuarioDTO objUsuario, in ValoracionDTO objValoracion);
        
        ValoracionDTO consultarValoracion(in long objUsuario);
    
        long registrarAsistencia(in AsistenciaDTO objAsistencia);

        arrayAsistenciaDTO consultarAsistenciasUsuario(in long id);

    };

    interface GestionPersonalInt{

        void registrarPersonal(in PersonalDTO objPersonal);

        boolean consultarPersonal(in long id, out PersonalDTO objPersonal) ;

        long abrirSesion(in CredencialDTO objCredencial);

        boolean editarPersonal(in long id, in PersonalDTO objPersonalNuevosDatos);

        boolean eliminarPersonal(in long id);
        
    };
};